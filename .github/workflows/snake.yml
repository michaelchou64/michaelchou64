name: generate animation

on:
  # run automatically every 24 hours
  schedule:
    - cron: "0 */24 * * *" 
  
  # allows to manually run the job at any time
  workflow_dispatch:
  
  # run on every push on the master branch
  push:
    branches:
    - main

jobs:
  generate:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      # Checkout the repository
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      # generates a snake game from a github user (<github_user_name>) contributions graph, output a svg animation at <svg_out_path>
      - name: generate github-contribution-grid-snake.svg
        uses: Platane/snk/svg-only@v3
        with:
          github_user_name: ${{ github.repository_owner }}
          outputs: |
            dist/github-contribution-grid-snake.svg
            dist/github-contribution-grid-snake-dark.svg?palette=github-dark
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      # Check if dist directory exists and has files
      - name: Verify generated files
        run: |
          if [ ! -d "dist" ]; then
            echo "Error: dist directory not found"
            exit 1
          fi
          if [ ! "$(ls -A dist)" ]; then
            echo "Error: dist directory is empty"
            exit 1
          fi
          echo "Generated files:"
          ls -la dist/
          
      # Create or update output branch with generated files
      - name: Create/Update output branch
        run: |
          # Configure git
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Set up authentication
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
          
          # Create output branch if it doesn't exist
          if ! git show-ref --verify --quiet refs/heads/output; then
            echo "Creating output branch..."
            git checkout --orphan output
            git rm -rf .
          else
            echo "Switching to existing output branch..."
            git checkout output
          fi
          
          # Copy generated files
          cp -r dist/* .
          
          # Add and commit files
          git add .
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update snake animation - $(date)"
            git push origin output
          fi

